// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tours": {
            "get": {
                "description": "Vraća listu svih tura dostupnih u sistemu.",
                "produces": [
                    "application/json"
                ],
                "summary": "Prikaz svih tura",
                "responses": {
                    "200": {
                        "description": "Lista svih tura",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Tour"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Kreira novu turu sa statusom 'draft' i cenom 0. Zahteva autentikaciju.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Kreiranje nove ture",
                "parameters": [
                    {
                        "description": "Podaci o turi (bez statusa, cene i authorId)",
                        "name": "tour",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Tour"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Uspešno kreirana tura",
                        "schema": {
                            "$ref": "#/definitions/domain.Tour"
                        }
                    },
                    "400": {
                        "description": "Greška: Neispravan format zahteva",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Greška: Korisnik nije autorizovan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tours/my-tours": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Vraća listu svih tura koje je kreirao autor čiji se token koristi.",
                "produces": [
                    "application/json"
                ],
                "summary": "Prikaz tura kreiranih od strane ulogovanog autora",
                "responses": {
                    "200": {
                        "description": "Lista tura",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Tour"
                            }
                        }
                    },
                    "401": {
                        "description": "Greška: Korisnik nije autorizovan",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tours/{id}/reviews": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Dodaje novu recenziju na turu sa datim ID-jem. Zahteva autentikaciju.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Dodavanje recenzije na turu",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Ture",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Podaci o recenziji",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.TourReview"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poruka o uspehu",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Tour": {
            "type": "object",
            "required": [
                "description",
                "difficulty",
                "name"
            ],
            "properties": {
                "authorId": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "reviews": {
                    "description": "\u003c-- DODATO POLJE",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.TourReview"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.TourReview": {
            "type": "object",
            "required": [
                "rating",
                "visitDate"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "commentDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "imageUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                },
                "touristId": {
                    "type": "string"
                },
                "visitDate": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Tours Service API",
	Description:      "API za upravljanje turama.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
