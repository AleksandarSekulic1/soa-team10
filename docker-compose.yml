services:
  postgres-db:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: super
      POSTGRES_DB: soa_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d soa_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  neo4j-db:
    image: neo4j:4.4
    container_name: neo4j-db
    environment:
      NEO4J_AUTH: none
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j-data:/data

  mongo-db:
    image: mongo
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  stakeholders-service:
    build:
      context: ./services/stakeholders-service
      dockerfile: Dockerfile
    container_name: stakeholders-service
    ports:
      - "8081:8081"
    environment:
      NEO4J_URI: "neo4j://neo4j-db:7687"
    depends_on:
      - neo4j-db
    restart: on-failure

  payments-service:
    build:
      context: ./services/payments-service
      dockerfile: Dockerfile
    container_name: payments-service
    ports:
      - "8084:8080"
    environment:
      ASPNETCORE_URLS: "http://+:8080"
      ConnectionStrings__PaymentsDb: "Host=postgres-db;Port=5432;Database=soa_db;Username=postgres;Password=super"
      ASPNETCORE_ENVIRONMENT: "Development"
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: on-failure

  blog-service:
    build:
      context: ./services/blog-service
      dockerfile: Dockerfile
    container_name: blog-service
    ports:
      - "8082:8082"
    environment:
      MONGO_URI: "mongodb://mongo-db:27017"
    depends_on:
      - mongo-db
    restart: on-failure

  tours-service:
    build:
      context: ./services/tours-service
      dockerfile: Dockerfile
    container_name: tours-service
    ports:
      - "8083:8083"
    environment:
      MONGO_URI: "mongodb://mongo-db:27017"
    depends_on:
      - mongo-db
    restart: on-failure

volumes:
  postgres-data:
  neo4j-data:
  mongo-data:
